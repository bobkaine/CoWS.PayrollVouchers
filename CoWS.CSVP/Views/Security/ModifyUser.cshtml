@model CoWS.PayrollVouchers.ViewModels.UserViewModel
@{
    ViewBag.Title = "Modify Existing User";
}

@section scripts {
    <script src="~/Scripts/CoWS/security.js"></script>
}

<h2>@ViewBag.Title</h2>
<p class="col-md-10 k-text-success">@ViewBag.SuccessMessage</p>
<p class="col-md-10 k-text-error">@ViewBag.ErrorMessage</p>
<div class="row">
    <div class="col-md-8">
        <section id="resetForm">
            @using (Html.BeginForm("UpdateUser", "Security", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="col-md-10">
                    <div class="form-group">
                        <label class="col-md-2 control-label">User</label>
                        <div class="col-md-10">
                            @(Html.Kendo().DropDownListFor(model => model.UserID)
                            .Name(componentName: "ddlModifyUsers")
                            .HtmlAttributes(new { @class = "k-dropdown" })
                            .DataTextField("FullName")
                            .DataValueField("UserID")
                            .AutoBind(true)
                            .OptionLabel("Select User...")
                            .Filter(FilterType.Contains)
                            .DataSource(dataSource => dataSource
                            .Read(read => read.Action(actionName: "GetUsers", controllerName: "Security")))
                            .Events(events => events.Change("ddlModifyUsers_onChange"))
                            )
                        </div>
                    </div>
                </div>
                <hr />
                <div class="col-md-10">
                    <div>
                        @Html.LabelFor(model => model.UserName, new { style = "padding-left:15px; padding-bottom:15px" })
                        @Html.DisplayFor(model => model.UserName)
                        @Html.HiddenFor(model => model.UserName)
                        @Html.HiddenFor(model => model.UserID)
                    </div>
                </div>
                <div class="col-md-10">
                    <div class="form-group">
                        @Html.LabelFor(model => model.FirstName, new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.FirstName, new { @class = "k-textbox", style = "display:inline-block" })
                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger", style = "display:inline-block" })
                        </div>
                    </div>
                </div>
                <div class="col-md-10">
                    <div class="form-group">
                        @Html.LabelFor(model => model.LastName, new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.LastName, new { @class = "k-textbox", style = "display:inline-block" })
                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger", style = "display:inline-block" })
                        </div>
                    </div>
                </div>
                <div class="col-md-10">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.Email, new { @class = "k-textbox", style = "display:inline-block; width:300px" })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger", style = "display:inline-block" })
                        </div>
                    </div>
                </div>
                <div class="col-md-10">
                    <div class="form-group">
                        @Html.LabelFor(model => model.UserRoles, new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            @(Html.Kendo().MultiSelectFor(model => model.UserRoles)
                            .Name(componentName: "UserRoles")
                            .HtmlAttributes(new { @class = "k-multiselect", style = "width: 400px;" })
                            .AutoClose(false)
                            .DataTextField("Name")
                            .DataValueField("Name")
                            .DataSource(dataSource => dataSource
                                .Read(read => read.Action(actionName: "GetUserRoles", controllerName: "Security")))
                            )
                            @Html.ValidationMessageFor(model => model.UserRoles, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-10">
                    <div class="form-group">
                        <div class="col-md-10">
                            @Html.CheckBoxFor(model => model.Active)
                            @Html.LabelFor(model => model.Active, new { @class = "col-md-2 control-label" })
                        </div>
                    </div>
                </div>
                <div class="col-md-10">
                    <div class="form-group">
                        <div class="col-md-2">
                            <input id="btnUpdateUser" type="submit" class="k-button" value="Update" />
                        </div>
                    </div>
                </div>
            }
        </section>
    </div>
</div>

<script>

</script>